'use strict';

var backendPluginApi = require('@backstage/backend-plugin-api');
var DefaultAuditorService = require('./DefaultAuditorService.cjs.js');

const auditorServiceFactory = backendPluginApi.createServiceFactory({
  service: backendPluginApi.coreServices.auditor,
  deps: {
    logger: backendPluginApi.coreServices.logger,
    auth: backendPluginApi.coreServices.auth,
    httpAuth: backendPluginApi.coreServices.httpAuth,
    plugin: backendPluginApi.coreServices.pluginMetadata
  },
  factory({ logger, plugin, auth, httpAuth }) {
    const auditLogger = logger.child({ isAuditEvent: true });
    return DefaultAuditorService.DefaultAuditorService.create(
      (event) => {
        const message = `${event.plugin}.${event.eventId}`;
        if (event.severityLevel === "low") {
          auditLogger.debug(message, event);
        } else {
          auditLogger.info(message, event);
        }
      },
      { plugin, auth, httpAuth }
    );
  }
});

exports.auditorServiceFactory = auditorServiceFactory;
//# sourceMappingURL=auditorServiceFactory.cjs.js.map
