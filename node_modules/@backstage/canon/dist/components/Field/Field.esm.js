import React__default from 'react';
import { Field as Field$1 } from '@base-ui-components/react/field';
import clsx from 'clsx';

const FieldRoot = React__default.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ React__default.createElement(
  Field$1.Root,
  {
    ref,
    className: clsx("canon-FieldRoot", className),
    ...props
  }
));
FieldRoot.displayName = Field$1.Root.displayName;
const FieldLabel = React__default.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ React__default.createElement(
  Field$1.Label,
  {
    ref,
    className: clsx("canon-FieldLabel", className),
    ...props
  }
));
FieldLabel.displayName = Field$1.Label.displayName;
const FieldDescription = React__default.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ React__default.createElement(
  Field$1.Description,
  {
    ref,
    className: clsx("canon-FieldDescription", className),
    ...props
  }
));
FieldDescription.displayName = Field$1.Description.displayName;
const FieldError = React__default.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ React__default.createElement(
  Field$1.Error,
  {
    ref,
    className: clsx("canon-FieldError", className),
    ...props
  }
));
FieldError.displayName = Field$1.Error.displayName;
const FieldValidity = ({
  children,
  className,
  ...props
}) => /* @__PURE__ */ React__default.createElement(Field$1.Validity, { ...props }, (validityState) => /* @__PURE__ */ React__default.createElement("div", { className: clsx("canon-FieldValidity", className) }, children(validityState)));
const Field = {
  Root: FieldRoot,
  Label: FieldLabel,
  Description: FieldDescription,
  Error: FieldError,
  Validity: FieldValidity
};

export { Field };
//# sourceMappingURL=Field.esm.js.map
