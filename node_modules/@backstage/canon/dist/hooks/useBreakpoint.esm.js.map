{"version":3,"file":"useBreakpoint.esm.js","sources":["../../src/hooks/useBreakpoint.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useMediaQuery } from './useMediaQuery';\nimport type { Breakpoint } from '../types';\n\nexport const breakpoints: { name: string; id: Breakpoint; value: number }[] = [\n  { name: 'Initial', id: 'initial', value: 0 },\n  { name: 'Extra Small', id: 'xs', value: 640 },\n  { name: 'Small', id: 'sm', value: 768 },\n  { name: 'Medium', id: 'md', value: 1024 },\n  { name: 'Large', id: 'lg', value: 1280 },\n  { name: 'Extra Large', id: 'xl', value: 1536 },\n];\n\nexport const useBreakpoint = (): Breakpoint => {\n  // TODO: Perhaps refactor for useMediaQuery to accept an array of queries\n  const matches = breakpoints.map(breakpoint => {\n    const match = useMediaQuery(`(min-width: ${breakpoint.value}px)`);\n    return match;\n  });\n\n  for (let i = matches.length - 1; i >= 0; i--) {\n    if (matches[i]) {\n      return breakpoints[i].id;\n    }\n  }\n\n  return breakpoints[0].id;\n};\n"],"names":[],"mappings":";;AAkBO,MAAM,WAAiE,GAAA;AAAA,EAC5E,EAAE,IAAM,EAAA,SAAA,EAAW,EAAI,EAAA,SAAA,EAAW,OAAO,CAAE,EAAA;AAAA,EAC3C,EAAE,IAAM,EAAA,aAAA,EAAe,EAAI,EAAA,IAAA,EAAM,OAAO,GAAI,EAAA;AAAA,EAC5C,EAAE,IAAM,EAAA,OAAA,EAAS,EAAI,EAAA,IAAA,EAAM,OAAO,GAAI,EAAA;AAAA,EACtC,EAAE,IAAM,EAAA,QAAA,EAAU,EAAI,EAAA,IAAA,EAAM,OAAO,IAAK,EAAA;AAAA,EACxC,EAAE,IAAM,EAAA,OAAA,EAAS,EAAI,EAAA,IAAA,EAAM,OAAO,IAAK,EAAA;AAAA,EACvC,EAAE,IAAM,EAAA,aAAA,EAAe,EAAI,EAAA,IAAA,EAAM,OAAO,IAAK;AAC/C;AAEO,MAAM,gBAAgB,MAAkB;AAE7C,EAAM,MAAA,OAAA,GAAU,WAAY,CAAA,GAAA,CAAI,CAAc,UAAA,KAAA;AAC5C,IAAA,MAAM,KAAQ,GAAA,aAAA,CAAc,CAAe,YAAA,EAAA,UAAA,CAAW,KAAK,CAAK,GAAA,CAAA,CAAA;AAChE,IAAO,OAAA,KAAA;AAAA,GACR,CAAA;AAED,EAAA,KAAA,IAAS,IAAI,OAAQ,CAAA,MAAA,GAAS,CAAG,EAAA,CAAA,IAAK,GAAG,CAAK,EAAA,EAAA;AAC5C,IAAI,IAAA,OAAA,CAAQ,CAAC,CAAG,EAAA;AACd,MAAO,OAAA,WAAA,CAAY,CAAC,CAAE,CAAA,EAAA;AAAA;AACxB;AAGF,EAAO,OAAA,WAAA,CAAY,CAAC,CAAE,CAAA,EAAA;AACxB;;;;"}