{"version":3,"file":"deprecated.cjs.js","sources":["../src/deprecated.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TokenManager,\n  createLegacyAuthAdapters,\n} from '@backstage/backend-common';\nimport { AuthService, DiscoveryService } from '@backstage/backend-plugin-api';\nimport {\n  CatalogApi,\n  CatalogClient,\n  EntityFilterQuery,\n  GetEntitiesRequest,\n} from '@backstage/catalog-client';\nimport {\n  Entity,\n  isGroupEntity,\n  isUserEntity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  CatalogEntityDocument,\n  type AnalyzeLocationEntityField as _AnalyzeLocationEntityField,\n  type AnalyzeLocationExistingEntity as _AnalyzeLocationExistingEntity,\n  type AnalyzeLocationGenerateEntity as _AnalyzeLocationGenerateEntity,\n  type AnalyzeLocationRequest as _AnalyzeLocationRequest,\n  type AnalyzeLocationResponse as _AnalyzeLocationResponse,\n  type LocationSpec as _LocationSpec,\n} from '@backstage/plugin-catalog-common';\nimport { catalogEntityReadPermission } from '@backstage/plugin-catalog-common/alpha';\nimport {\n  locationSpecToMetadataName as _locationSpecToMetadataName,\n  locationSpecToLocationEntity as _locationSpecToLocationEntity,\n  processingResult as _processingResult,\n  type EntitiesSearchFilter as _EntitiesSearchFilter,\n  type EntityFilter as _EntityFilter,\n  type DeferredEntity as _DeferredEntity,\n  type EntityRelationSpec as _EntityRelationSpec,\n  type CatalogProcessor as _CatalogProcessor,\n  type CatalogProcessorParser as _CatalogProcessorParser,\n  type CatalogProcessorCache as _CatalogProcessorCache,\n  type CatalogProcessorEmit as _CatalogProcessorEmit,\n  type CatalogProcessorLocationResult as _CatalogProcessorLocationResult,\n  type CatalogProcessorEntityResult as _CatalogProcessorEntityResult,\n  type CatalogProcessorRelationResult as _CatalogProcessorRelationResult,\n  type CatalogProcessorErrorResult as _CatalogProcessorErrorResult,\n  type CatalogProcessorRefreshKeysResult as _CatalogProcessorRefreshKeysResult,\n  type CatalogProcessorResult as _CatalogProcessorResult,\n  type EntityProvider as _EntityProvider,\n  type EntityProviderConnection as _EntityProviderConnection,\n  type EntityProviderMutation as _EntityProviderMutation,\n  type AnalyzeOptions as _AnalyzeOptions,\n  type PlaceholderResolver as _PlaceholderResolver,\n  type PlaceholderResolverParams as _PlaceholderResolverParams,\n  type PlaceholderResolverRead as _PlaceholderResolverRead,\n  type PlaceholderResolverResolveUrl as _PlaceholderResolverResolveUrl,\n  type LocationAnalyzer as _LocationAnalyzer,\n  type ScmLocationAnalyzer as _ScmLocationAnalyzer,\n} from '@backstage/plugin-catalog-node';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport {\n  defaultCatalogCollatorEntityTransformer as _defaultCatalogCollatorEntityTransformer,\n  type CatalogCollatorEntityTransformer as _CatalogCollatorEntityTransformer,\n} from '@backstage/plugin-search-backend-module-catalog';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\nimport { Readable } from 'stream';\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport const locationSpecToMetadataName = _locationSpecToMetadataName;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport const locationSpecToLocationEntity = _locationSpecToLocationEntity;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport const processingResult = _processingResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type EntitiesSearchFilter = _EntitiesSearchFilter;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type EntityFilter = _EntityFilter;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type DeferredEntity = _DeferredEntity;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type EntityRelationSpec = _EntityRelationSpec;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessor = _CatalogProcessor;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorParser = _CatalogProcessorParser;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorCache = _CatalogProcessorCache;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorEmit = _CatalogProcessorEmit;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorLocationResult = _CatalogProcessorLocationResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorEntityResult = _CatalogProcessorEntityResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorRelationResult = _CatalogProcessorRelationResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorErrorResult = _CatalogProcessorErrorResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorRefreshKeysResult =\n  _CatalogProcessorRefreshKeysResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type CatalogProcessorResult = _CatalogProcessorResult;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type EntityProvider = _EntityProvider;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type EntityProviderConnection = _EntityProviderConnection;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type EntityProviderMutation = _EntityProviderMutation;\n\n/**\n * Holds the entity location information.\n *\n * @remarks\n *\n *  `presence` flag: when using repo importer plugin, location is being created before the component yaml file is merged to the main branch.\n *  This flag is then set to indicate that the file can be not present.\n *  default value: 'required'.\n *\n * @public\n * @deprecated use the same type from `@backstage/plugin-catalog-common` instead\n */\nexport type LocationSpec = _LocationSpec;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type AnalyzeOptions = _AnalyzeOptions;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type LocationAnalyzer = _LocationAnalyzer;\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type ScmLocationAnalyzer = _ScmLocationAnalyzer;\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type PlaceholderResolver = _PlaceholderResolver;\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type PlaceholderResolverParams = _PlaceholderResolverParams;\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type PlaceholderResolverRead = _PlaceholderResolverRead;\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-catalog-node` instead\n */\nexport type PlaceholderResolverResolveUrl = _PlaceholderResolverResolveUrl;\n\n/**\n * @public\n * @deprecated use the same type from `@backstage/plugin-catalog-common` instead\n */\nexport type AnalyzeLocationRequest = _AnalyzeLocationRequest;\n/**\n * @public\n * @deprecated use the same type from `@backstage/plugin-catalog-common` instead\n */\nexport type AnalyzeLocationResponse = _AnalyzeLocationResponse;\n\n/**\n * If the folder pointed to already contained catalog info yaml files, they are\n * read and emitted like this so that the frontend can inform the user that it\n * located them and can make sure to register them as well if they weren't\n * already\n * @public\n * @deprecated use the same type from `@backstage/plugin-catalog-common` instead\n */\nexport type AnalyzeLocationExistingEntity = _AnalyzeLocationExistingEntity;\n/**\n * This is some form of representation of what the analyzer could deduce.\n * We should probably have a chat about how this can best be conveyed to\n * the frontend. It'll probably contain a (possibly incomplete) entity, plus\n * enough info for the frontend to know what form data to show to the user\n * for overriding/completing the info.\n * @public\n * @deprecated use the same type from `@backstage/plugin-catalog-common` instead\n */\nexport type AnalyzeLocationGenerateEntity = _AnalyzeLocationGenerateEntity;\n\n/**\n *\n * This is where I get really vague. Something like this perhaps? Or it could be\n * something like a json-schema that contains enough info for the frontend to\n * be able to present a form and explanations\n * @public\n * @deprecated use the same type from `@backstage/plugin-catalog-common` instead\n */\nexport type AnalyzeLocationEntityField = _AnalyzeLocationEntityField;\n\nnamespace search {\n  const configKey = 'search.collators.catalog';\n\n  const defaults = {\n    schedule: {\n      frequency: { minutes: 10 },\n      timeout: { minutes: 15 },\n      initialDelay: { seconds: 3 },\n    },\n    collatorOptions: {\n      locationTemplate: '/catalog/:namespace/:kind/:name',\n      filter: undefined,\n      batchSize: 500,\n    },\n  };\n\n  export const readCollatorConfigOptions = (\n    configRoot: Config,\n  ): {\n    locationTemplate: string;\n    filter: EntityFilterQuery | undefined;\n    batchSize: number;\n  } => {\n    const config = configRoot.getOptionalConfig(configKey);\n    if (!config) {\n      return defaults.collatorOptions;\n    }\n\n    return {\n      locationTemplate:\n        config.getOptionalString('locationTemplate') ??\n        defaults.collatorOptions.locationTemplate,\n      filter:\n        config.getOptional<EntityFilterQuery>('filter') ??\n        defaults.collatorOptions.filter,\n      batchSize:\n        config.getOptionalNumber('batchSize') ??\n        defaults.collatorOptions.batchSize,\n    };\n  };\n\n  export const getDocumentText = (entity: Entity): string => {\n    const documentTexts: string[] = [];\n    if (entity.metadata.description) {\n      documentTexts.push(entity.metadata.description);\n    }\n\n    if (isUserEntity(entity) || isGroupEntity(entity)) {\n      if (entity.spec?.profile?.displayName) {\n        documentTexts.push(entity.spec.profile.displayName);\n      }\n    }\n\n    if (isUserEntity(entity)) {\n      if (entity.spec?.profile?.email) {\n        documentTexts.push(entity.spec.profile.email);\n      }\n    }\n\n    return documentTexts.join(' : ');\n  };\n}\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-search-backend-module-catalog` instead\n */\nexport const defaultCatalogCollatorEntityTransformer =\n  _defaultCatalogCollatorEntityTransformer;\n\n/**\n * @public\n * @deprecated This is no longer supported since the new backend system migration\n */\nexport class DefaultCatalogCollatorFactory implements DocumentCollatorFactory {\n  public readonly type = 'software-catalog';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private locationTemplate: string;\n  private filter?: GetEntitiesRequest['filter'];\n  private batchSize: number;\n  private readonly catalogClient: CatalogApi;\n  private entityTransformer: CatalogCollatorEntityTransformer;\n  private auth: AuthService;\n\n  static fromConfig(\n    configRoot: Config,\n    options: DefaultCatalogCollatorFactoryOptions,\n  ) {\n    const configOptions = search.readCollatorConfigOptions(configRoot);\n    const { auth: adaptedAuth } = createLegacyAuthAdapters({\n      auth: options.auth,\n      discovery: options.discovery,\n      tokenManager: options.tokenManager,\n    });\n    return new DefaultCatalogCollatorFactory({\n      locationTemplate:\n        options.locationTemplate ?? configOptions.locationTemplate,\n      filter: options.filter ?? configOptions.filter,\n      batchSize: options.batchSize ?? configOptions.batchSize,\n      entityTransformer: options.entityTransformer,\n      auth: adaptedAuth,\n      discovery: options.discovery,\n      catalogClient: options.catalogClient,\n    });\n  }\n\n  private constructor(options: {\n    locationTemplate: string;\n    filter: GetEntitiesRequest['filter'];\n    batchSize: number;\n    entityTransformer?: CatalogCollatorEntityTransformer;\n    auth: AuthService;\n    discovery: DiscoveryService;\n    catalogClient?: CatalogApi;\n  }) {\n    const {\n      auth,\n      batchSize,\n      discovery,\n      locationTemplate,\n      filter,\n      catalogClient,\n      entityTransformer,\n    } = options;\n\n    this.locationTemplate = locationTemplate;\n    this.filter = filter;\n    this.batchSize = batchSize;\n    this.catalogClient =\n      catalogClient || new CatalogClient({ discoveryApi: discovery });\n    this.entityTransformer =\n      entityTransformer ?? defaultCatalogCollatorEntityTransformer;\n    this.auth = auth;\n  }\n\n  async getCollator(): Promise<Readable> {\n    return Readable.from(this.execute());\n  }\n\n  private async *execute(): AsyncGenerator<CatalogEntityDocument> {\n    let entitiesRetrieved = 0;\n    let cursor: string | undefined = undefined;\n\n    do {\n      const { token } = await this.auth.getPluginRequestToken({\n        onBehalfOf: await this.auth.getOwnServiceCredentials(),\n        targetPluginId: 'catalog',\n      });\n      const response = await this.catalogClient.queryEntities(\n        {\n          filter: this.filter,\n          limit: this.batchSize,\n          ...(cursor ? { cursor } : {}),\n        },\n        { token },\n      );\n      cursor = response.pageInfo.nextCursor;\n      entitiesRetrieved += response.items.length;\n\n      for (const entity of response.items) {\n        yield {\n          ...this.entityTransformer(entity),\n          authorization: {\n            resourceRef: stringifyEntityRef(entity),\n          },\n          location: this.applyArgsToFormat(this.locationTemplate, {\n            namespace: entity.metadata.namespace || 'default',\n            kind: entity.kind,\n            name: entity.metadata.name,\n          }),\n        };\n      }\n    } while (cursor);\n  }\n\n  private applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n\n    return formatted.toLowerCase();\n  }\n}\n\n/**\n * @public\n * @deprecated This is no longer supported since the new backend system migration\n */\nexport type DefaultCatalogCollatorFactoryOptions = {\n  auth?: AuthService;\n  discovery: DiscoveryService;\n  tokenManager?: TokenManager;\n  /**\n   * @deprecated Use the config key `search.collators.catalog.locationTemplate` instead.\n   */\n  locationTemplate?: string;\n  /**\n   * @deprecated Use the config key `search.collators.catalog.filter` instead.\n   */\n  filter?: GetEntitiesRequest['filter'];\n  /**\n   * @deprecated Use the config key `search.collators.catalog.batchSize` instead.\n   */\n  batchSize?: number;\n  // TODO(freben): Change to required CatalogService instead when fully migrated to the new backend system.\n  catalogClient?: CatalogApi;\n  /**\n   * Allows you to customize how entities are shaped into documents.\n   */\n  entityTransformer?: CatalogCollatorEntityTransformer;\n};\n\n/**\n * @public\n * @deprecated import from `@backstage/plugin-search-backend-module-catalog` instead\n */\nexport type CatalogCollatorEntityTransformer =\n  _CatalogCollatorEntityTransformer;\n"],"names":["_locationSpecToMetadataName","_locationSpecToLocationEntity","_processingResult","search","isUserEntity","isGroupEntity","_defaultCatalogCollatorEntityTransformer","catalogEntityReadPermission","createLegacyAuthAdapters","catalogClient","CatalogClient","Readable","stringifyEntityRef"],"mappings":"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"}