import React from 'react';
import { HeaderLabel } from '@backstage/core-components';
import { RELATION_OWNED_BY } from '@backstage/catalog-model';
import { getEntityRelations, EntityRefLinks } from '@backstage/plugin-catalog-react';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { catalogTranslationRef } from '../../translation.esm.js';

function EntityLabels(props) {
  const { entity } = props;
  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);
  const { t } = useTranslationRef(catalogTranslationRef);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, ownedByRelations.length > 0 && /* @__PURE__ */ React.createElement(
    HeaderLabel,
    {
      label: t("entityLabels.ownerLabel"),
      contentTypograpyRootComponent: "p",
      value: /* @__PURE__ */ React.createElement(
        EntityRefLinks,
        {
          entityRefs: ownedByRelations,
          defaultKind: "Group",
          color: "inherit"
        }
      )
    }
  ), entity.spec?.lifecycle && /* @__PURE__ */ React.createElement(
    HeaderLabel,
    {
      label: t("entityLabels.lifecycleLabel"),
      value: entity.spec.lifecycle?.toString()
    }
  ));
}

export { EntityLabels };
//# sourceMappingURL=EntityLabels.esm.js.map
