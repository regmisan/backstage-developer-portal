import * as _backstage_catalog_model from '@backstage/catalog-model';
import * as _backstage_plugin_catalog_react_alpha from '@backstage/plugin-catalog-react/alpha';
import * as _backstage_frontend_plugin_api from '@backstage/frontend-plugin-api';
import React__default from 'react';

/** @alpha */
declare const _default: _backstage_frontend_plugin_api.FrontendPlugin<{}, {
    catalogIndex: _backstage_frontend_plugin_api.ExternalRouteRef<undefined>;
}, {
    "entity-card:org/group-profile": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "entity-card";
        name: "group-profile";
        config: {
            filter: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type: "content" | "summary" | "info" | undefined;
        };
        configInput: {
            filter?: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type?: "content" | "summary" | "info" | undefined;
        };
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<(entity: _backstage_catalog_model.Entity) => boolean, "catalog.entity-filter-function", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "catalog.entity-filter-expression", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_plugin_catalog_react_alpha.EntityCardType, "catalog.entity-card-type", {
            optional: true;
        }>;
        inputs: {};
        params: {
            loader: () => Promise<JSX.Element>;
            filter?: string | _backstage_plugin_catalog_react_alpha.EntityPredicate | ((entity: _backstage_catalog_model.Entity) => boolean);
            type?: _backstage_plugin_catalog_react_alpha.EntityCardType;
        };
    }>;
    "entity-card:org/members-list": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "entity-card";
        name: "members-list";
        config: {
            filter: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type: "content" | "summary" | "info" | undefined;
        };
        configInput: {
            filter?: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type?: "content" | "summary" | "info" | undefined;
        };
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<(entity: _backstage_catalog_model.Entity) => boolean, "catalog.entity-filter-function", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "catalog.entity-filter-expression", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_plugin_catalog_react_alpha.EntityCardType, "catalog.entity-card-type", {
            optional: true;
        }>;
        inputs: {};
        params: {
            loader: () => Promise<JSX.Element>;
            filter?: string | _backstage_plugin_catalog_react_alpha.EntityPredicate | ((entity: _backstage_catalog_model.Entity) => boolean);
            type?: _backstage_plugin_catalog_react_alpha.EntityCardType;
        };
    }>;
    "entity-card:org/ownership": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "entity-card";
        name: "ownership";
        config: {
            filter: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type: "content" | "summary" | "info" | undefined;
        };
        configInput: {
            filter?: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type?: "content" | "summary" | "info" | undefined;
        };
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<(entity: _backstage_catalog_model.Entity) => boolean, "catalog.entity-filter-function", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "catalog.entity-filter-expression", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_plugin_catalog_react_alpha.EntityCardType, "catalog.entity-card-type", {
            optional: true;
        }>;
        inputs: {};
        params: {
            loader: () => Promise<JSX.Element>;
            filter?: string | _backstage_plugin_catalog_react_alpha.EntityPredicate | ((entity: _backstage_catalog_model.Entity) => boolean);
            type?: _backstage_plugin_catalog_react_alpha.EntityCardType;
        };
    }>;
    "entity-card:org/user-profile": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "entity-card";
        name: "user-profile";
        config: {
            filter: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type: "content" | "summary" | "info" | undefined;
        };
        configInput: {
            filter?: _backstage_plugin_catalog_react_alpha.EntityPredicate | undefined;
            type?: "content" | "summary" | "info" | undefined;
        };
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<(entity: _backstage_catalog_model.Entity) => boolean, "catalog.entity-filter-function", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "catalog.entity-filter-expression", {
            optional: true;
        }> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_plugin_catalog_react_alpha.EntityCardType, "catalog.entity-card-type", {
            optional: true;
        }>;
        inputs: {};
        params: {
            loader: () => Promise<JSX.Element>;
            filter?: string | _backstage_plugin_catalog_react_alpha.EntityPredicate | ((entity: _backstage_catalog_model.Entity) => boolean);
            type?: _backstage_plugin_catalog_react_alpha.EntityCardType;
        };
    }>;
}>;

export { _default as default };
