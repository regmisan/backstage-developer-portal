'use strict';

var integration = require('@backstage/integration');
var register = require('./catalog/register.cjs.js');
var write = require('./catalog/write.cjs.js');
var fetch = require('./catalog/fetch.cjs.js');
var log = require('./debug/log.cjs.js');
var wait = require('./debug/wait.cjs.js');
var plain = require('./fetch/plain.cjs.js');
var plainFile = require('./fetch/plainFile.cjs.js');
var template = require('./fetch/template.cjs.js');
var templateFile = require('./fetch/templateFile.cjs.js');
var _delete = require('./filesystem/delete.cjs.js');
var rename = require('./filesystem/rename.cjs.js');
var read = require('./filesystem/read.cjs.js');
var pluginScaffolderBackendModuleGithub = require('@backstage/plugin-scaffolder-backend-module-github');
var pluginScaffolderBackendModuleAzure = require('@backstage/plugin-scaffolder-backend-module-azure');
var pluginScaffolderBackendModuleBitbucket = require('@backstage/plugin-scaffolder-backend-module-bitbucket');
var pluginScaffolderBackendModuleBitbucketCloud = require('@backstage/plugin-scaffolder-backend-module-bitbucket-cloud');
var pluginScaffolderBackendModuleBitbucketServer = require('@backstage/plugin-scaffolder-backend-module-bitbucket-server');
var pluginScaffolderBackendModuleGerrit = require('@backstage/plugin-scaffolder-backend-module-gerrit');
var pluginScaffolderBackendModuleGitlab = require('@backstage/plugin-scaffolder-backend-module-gitlab');
var pluginScaffolderBackendModuleGitea = require('@backstage/plugin-scaffolder-backend-module-gitea');

const createBuiltinActions = (options) => {
  const {
    reader,
    integrations,
    catalogClient,
    auth,
    config,
    additionalTemplateFilters,
    additionalTemplateGlobals
  } = options;
  const githubCredentialsProvider = integration.DefaultGithubCredentialsProvider.fromIntegrations(integrations);
  const actions = [
    plain.createFetchPlainAction({
      reader,
      integrations
    }),
    plainFile.createFetchPlainFileAction({
      reader,
      integrations
    }),
    template.createFetchTemplateAction({
      integrations,
      reader,
      additionalTemplateFilters,
      additionalTemplateGlobals
    }),
    templateFile.createFetchTemplateFileAction({
      integrations,
      reader,
      additionalTemplateFilters,
      additionalTemplateGlobals
    }),
    pluginScaffolderBackendModuleGerrit.createPublishGerritAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleGerrit.createPublishGerritReviewAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleGitea.createPublishGiteaAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleGithub.createPublishGithubAction({
      integrations,
      config,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleGithub.createPublishGithubPullRequestAction({
      integrations,
      githubCredentialsProvider,
      config
    }),
    pluginScaffolderBackendModuleGitlab.createPublishGitlabAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleGitlab.createPublishGitlabMergeRequestAction({
      integrations
    }),
    pluginScaffolderBackendModuleGitlab.createGitlabRepoPushAction({
      integrations
    }),
    pluginScaffolderBackendModuleBitbucket.createPublishBitbucketAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleBitbucketCloud.createPublishBitbucketCloudAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleBitbucketCloud.createPublishBitbucketCloudPullRequestAction({ integrations, config }),
    pluginScaffolderBackendModuleBitbucketServer.createPublishBitbucketServerAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleBitbucketServer.createPublishBitbucketServerPullRequestAction({
      integrations,
      config
    }),
    pluginScaffolderBackendModuleAzure.createPublishAzureAction({
      integrations,
      config
    }),
    log.createDebugLogAction(),
    wait.createWaitAction(),
    register.createCatalogRegisterAction({ catalogClient, integrations, auth }),
    fetch.createFetchCatalogEntityAction({ catalogClient, auth }),
    write.createCatalogWriteAction(),
    _delete.createFilesystemDeleteAction(),
    read.createFilesystemReadDirAction(),
    rename.createFilesystemRenameAction(),
    pluginScaffolderBackendModuleGithub.createGithubActionsDispatchAction({
      integrations,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleGithub.createGithubWebhookAction({
      integrations,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleGithub.createGithubIssuesLabelAction({
      integrations,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleGithub.createGithubRepoCreateAction({
      integrations,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleGithub.createGithubRepoPushAction({
      integrations,
      config,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleGithub.createGithubEnvironmentAction({
      integrations,
      catalogClient
    }),
    pluginScaffolderBackendModuleGithub.createGithubDeployKeyAction({
      integrations
    }),
    pluginScaffolderBackendModuleGithub.createGithubAutolinksAction({
      integrations,
      githubCredentialsProvider
    }),
    pluginScaffolderBackendModuleBitbucketCloud.createBitbucketPipelinesRunAction({
      integrations
    })
  ];
  return actions;
};

exports.createBuiltinActions = createBuiltinActions;
//# sourceMappingURL=createBuiltinActions.cjs.js.map
