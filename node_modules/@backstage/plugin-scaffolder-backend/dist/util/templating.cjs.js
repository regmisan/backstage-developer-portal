'use strict';

require('zod');
require('zod-to-json-schema');

function convertFiltersToRecord(filters) {
  if (!filters) {
    return {};
  }
  if (Array.isArray(filters)) {
    const result = {};
    for (const filter of filters) {
      result[filter.id] = filter.filter;
    }
    return result;
  }
  return filters;
}
function isGlobalFunction(global) {
  return "fn" in global;
}
function convertGlobalsToRecord(globals) {
  if (!globals) {
    return {};
  }
  if (!Array.isArray(globals)) {
    return globals;
  }
  const result = {};
  for (const global of globals) {
    result[global.id] = isGlobalFunction(global) ? global.fn : global.value;
  }
  return result;
}

exports.convertFiltersToRecord = convertFiltersToRecord;
exports.convertGlobalsToRecord = convertGlobalsToRecord;
//# sourceMappingURL=templating.cjs.js.map
