{"version":3,"file":"createTemplateFilter.cjs.js","sources":["../../../src/alpha/filters/createTemplateFilter.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue } from '@backstage/types';\nimport { CreatedTemplateFilter, TemplateFilterSchema } from './types';\nimport { z } from 'zod';\n\n/**\n * This function is used to create new template filters in type-safe manner.\n * @alpha\n */\nexport const createTemplateFilter = <\n  TSchema extends TemplateFilterSchema<any, any> | undefined,\n  TFunctionSchema extends TSchema extends TemplateFilterSchema<any, any>\n    ? z.infer<ReturnType<TSchema>>\n    : (arg: JsonValue, ...rest: JsonValue[]) => JsonValue | undefined,\n>(\n  filter: CreatedTemplateFilter<TSchema, TFunctionSchema>,\n): CreatedTemplateFilter<unknown, unknown> => filter;\n"],"names":[],"mappings":";;AAwBa,MAAA,oBAAA,GAAuB,CAMlC,MAC4C,KAAA;;;;"}